#!/usr/local/cpanel/3rdparty/bin/perl

use strict;
use warnings;

package ea_tomcat100::start_podman;

require '/opt/cpanel/ea-tomcat100/bin/tomcat_access';
require '/usr/local/cpanel/scripts/ea-podman';

my $time_to_wait_for_podman_to_start = 120;

script(@ARGV) if not caller();

sub script {
    my (@args) = @_;

    die "Do not run as root" if $< == 0;

    my $homedir = $ENV{HOME};
    my $user    = $ENV{USER};
    die "Could not determine homedir" if !-e $homedir;

ea_tomcat100::tomcat_access::logit ("start_podman: 001");

    my $name = "ea_tomcat100$homedir";
    $name =~ s/\//_/g;

    my $server_xml = $homedir . "/ea-tomcat100/conf/server.xml";

    if ( !-e $server_xml ) {
        print "Error";
        exit;
    }

    my ( $http_port, $ajp_port ) = split( /:/, ea_tomcat100::tomcat_access::get_ports($server_xml) );
    my @cmd;

ea_tomcat100::tomcat_access::logit ("start_podman: 002");

    @cmd = ( 
        "podman", "stop", "--ignore", $name
    );  
    system(@cmd);

ea_tomcat100::tomcat_access::logit ("start_podman: 003");

    @cmd = ( 
        "podman", "run", "-d", "--name", $name, "--replace=true", "-p", "$http_port:$http_port", "-p", "$ajp_port:$ajp_port", "-v", "$homedir/ea-tomcat100/conf:/usr/local/tomcat/conf", "-v", "$homedir/ea-tomcat100/logs/:/usr/local/tomcat/logs", "-v", "$homedir/ea-tomcat100/run:/usr/local/tomcat/run", "-v", "$homedir/ea-tomcat100/temp/:/usr/local/tomcat/temp", "-v",
        "$homedir/ea-tomcat100/webapps:/usr/local/tomcat/webapps", "-v", "$homedir/ea-tomcat100/work/:/usr/local/tomcat/work", "-e", 'CATALINA_OPTS=-Xmx100m', "-e", 'CATALINA_BASE=/usr/local/tomcat', "docker.io/library/tomcat:10.0.14"  
    ); 
    system(@cmd);

ea_tomcat100::tomcat_access::logit ("start_podman: 004");

    for my $i ( 1 .. $time_to_wait_for_podman_to_start ) {
ea_tomcat100::tomcat_access::logit ("start_podman: 005");
        last if (scripts::ea_podman::is_container_running($name));
ea_tomcat100::tomcat_access::logit ("start_podman: 006");
        sleep (1);
    }

ea_tomcat100::tomcat_access::logit ("start_podman: OUT");

    return 0;
}

1;

